<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CCreative</name>
    </assembly>
    <members>
        <member name="T:CCreative.FastBitmapLib.FastBitmap">
            <summary>
            Encapsulates a Bitmap for fast bitmap pixel operations using 32bpp images
            </summary>
        </member>
        <member name="F:CCreative.FastBitmapLib.FastBitmap.BytesPerPixel">
            <summary>
            Specifies the number of bytes available per pixel of the bitmap object being manipulated
            </summary>
        </member>
        <member name="F:CCreative.FastBitmapLib.FastBitmap._bitmap">
            <summary>
            The Bitmap object encapsulated on this FastBitmap
            </summary>
        </member>
        <member name="F:CCreative.FastBitmapLib.FastBitmap._bitmapData">
            <summary>
            The BitmapData resulted from the lock operation
            </summary>
        </member>
        <member name="F:CCreative.FastBitmapLib.FastBitmap._scan0">
            <summary>
            The first pixel of the bitmap
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.Width">
            <summary>
            Gets the width of this FastBitmap object
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.Height">
            <summary>
            Gets the height of this FastBitmap object
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.Scan0">
            <summary>
            Gets the pointer to the first pixel of the bitmap
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.Stride">
            <summary>
            Gets the stride width of the bitmap
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.Locked">
            <summary>
            Gets a boolean value that states whether this FastBitmap is currently locked in memory
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.DataArray">
            <summary>
            Gets an array of 32-bit color pixel values that represent this FastBitmap
            </summary>
            <exception cref="T:System.Exception">The locking operation required to extract the values off from the underlying bitmap failed</exception>
            <exception cref="T:System.InvalidOperationException">The bitmap is already locked outside this fast bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.#ctor(System.Drawing.Bitmap)">
            <summary>
            Creates a new instance of the FastBitmap class with a specified Bitmap.
            The bitmap provided must have a 32bpp depth
            </summary>
            <param name="bitmap">The Bitmap object to encapsulate on this FastBitmap object</param>
            <exception cref="T:System.ArgumentException">The bitmap provided does not have a 32bpp pixel format</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Dispose">
            <summary>
            Disposes of this fast bitmap object and releases any pending resources.
            The underlying bitmap is not disposes, and is unlocked, if currently locked
            </summary>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Lock">
            <summary>
            Locks the bitmap to start the bitmap operations. If the bitmap is already locked,
            an exception is thrown
            </summary>
            <returns>A fast bitmap locked struct that will unlock the underlying bitmap after disposal</returns>
            <exception cref="T:System.InvalidOperationException">The bitmap is already locked</exception>
            <exception cref="T:System.Exception">The locking operation in the underlying bitmap failed</exception>
            <exception cref="T:System.InvalidOperationException">The bitmap is already locked outside this fast bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Lock(System.Drawing.Imaging.ImageLockMode)">
            <summary>
            Locks the bitmap to start the bitmap operations
            </summary>
            <param name="lockMode">The lock mode to use on the bitmap</param>
            <returns>A fast bitmap locked struct that will unlock the underlying bitmap after disposal</returns>
            <exception cref="T:System.Exception">The locking operation in the underlying bitmap failed</exception>
            <exception cref="T:System.InvalidOperationException">The bitmap is already locked outside this fast bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Lock(System.Drawing.Imaging.ImageLockMode,System.Drawing.Rectangle)">
            <summary>
            Locks the bitmap to start the bitmap operations
            </summary>
            <param name="lockMode">The lock mode to use on the bitmap</param>
            <param name="rect">The rectangle to lock</param>
            <returns>A fast bitmap locked struct that will unlock the underlying bitmap after disposal</returns>
            <exception cref="T:System.ArgumentException">The provided region is invalid</exception>
            <exception cref="T:System.Exception">The locking operation in the underlying bitmap failed</exception>
            <exception cref="T:System.InvalidOperationException">The bitmap region is already locked</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Unlock">
            <summary>
            Unlocks the bitmap and applies the changes made to it. If the bitmap was not locked
            beforehand, an exception is thrown
            </summary>
            <exception cref="T:System.InvalidOperationException">The bitmap is already unlocked</exception>
            <exception cref="T:System.Exception">The unlocking operation in the underlying bitmap failed</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets the pixel color at the given coordinates. If the bitmap was not locked beforehands,
            an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to set</param>
            <param name="y">The Y coordinate of the pixel to set</param>
            <param name="color">The new color of the pixel to set</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.SetPixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the pixel color at the given coordinates. If the bitmap was not locked beforehands,
            an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to set</param>
            <param name="y">The Y coordinate of the pixel to set</param>
            <param name="color">The new color of the pixel to set</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.SetPixel(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sets the pixel color at the given coordinates. If the bitmap was not locked beforehands,
            an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to set</param>
            <param name="y">The Y coordinate of the pixel to set</param>
            <param name="color">The new color of the pixel to set</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            Gets the pixel color at the given coordinates. If the bitmap was not locked beforehands,
            an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to get</param>
            <param name="y">The Y coordinate of the pixel to get</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.GetPixelInt(System.Int32,System.Int32)">
            <summary>
            Gets the pixel color at the given coordinates as an integer value. If the bitmap
            was not locked beforehands, an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to get</param>
            <param name="y">The Y coordinate of the pixel to get</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.GetPixelUInt(System.Int32,System.Int32)">
            <summary>
            Gets the pixel color at the given coordinates as an unsigned integer value.
            If the bitmap was not locked beforehands, an exception is thrown
            </summary>
            <param name="x">The X coordinate of the pixel to get</param>
            <param name="y">The Y coordinate of the pixel to get</param>
            <exception cref="T:System.InvalidOperationException">The fast bitmap is not locked</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided coordinates are out of bounds of the bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.CopyFromArray(System.Int32[],System.Boolean)">
            <summary>
            Copies the contents of the given array of colors into this FastBitmap.
            Throws an ArgumentException if the count of colors on the array mismatches the pixel count from this FastBitmap
            </summary>
            <param name="colors">The array of colors to copy</param>
            <param name="ignoreZeroes">Whether to ignore zeroes when copying the data</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Clear(System.Drawing.Color)">
            <summary>
            Clears the bitmap with the given color
            </summary>
            <param name="color">The color to clear the bitmap with</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.Clear(System.Int32)">
            <summary>
            Clears the bitmap with the given color
            </summary>
            <param name="color">The color to clear the bitmap with</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.CopyRegion(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Copies a region of the source bitmap into this fast bitmap
            </summary>
            <param name="source">The source image to copy</param>
            <param name="srcRect">The region on the source bitmap that will be copied over</param>
            <param name="destRect">The region on this fast bitmap that will be changed</param>
            <exception cref="T:System.ArgumentException">The provided source bitmap is the same bitmap locked in this FastBitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.CopyPixels(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Performs a copy operation of the pixels from the Source bitmap to the Target bitmap.
            If the dimensions or pixel depths of both images don't match, the copy is not performed
            </summary>
            <param name="source">The bitmap to copy the pixels from</param>
            <param name="target">The bitmap to copy the pixels to</param>
            <returns>Whether the copy proceedure was successful</returns>
            <exception cref="T:System.ArgumentException">The provided source and target bitmaps are the same</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.ClearBitmap(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Clears the given bitmap with the given color
            </summary>
            <param name="bitmap">The bitmap to clear</param>
            <param name="color">The color to clear the bitmap with</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.ClearBitmap(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Clears the given bitmap with the given color
            </summary>
            <param name="bitmap">The bitmap to clear</param>
            <param name="color">The color to clear the bitmap with</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.CopyRegion(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Copies a region of the source bitmap to a target bitmap
            </summary>
            <param name="source">The source image to copy</param>
            <param name="target">The target image to be altered</param>
            <param name="srcRect">The region on the source bitmap that will be copied over</param>
            <param name="destRect">The region on the target bitmap that will be changed</param>
            <exception cref="T:System.ArgumentException">The provided source and target bitmaps are the same bitmap</exception>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.SliceBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Returns a bitmap that is a slice of the original provided 32bpp Bitmap.
            The region must have a width and a height > 0, and must lie inside the source bitmap's area
            </summary>
            <param name="source">The source bitmap to slice</param>
            <param name="region">The region of the source bitmap to slice</param>
            <returns>A Bitmap that represents the rectangle region slice of the source bitmap</returns>
            <exception cref="T:System.ArgumentException">The provided bimap is not 32bpp</exception>
            <exception cref="T:System.ArgumentException">The provided region is invalid</exception>
        </member>
        <member name="T:CCreative.FastBitmapLib.FastBitmap.FastBitmapLocker">
            <summary>
            Represents a disposable structure that is returned during Lock() calls, and unlocks the bitmap on Dispose calls
            </summary>
        </member>
        <member name="F:CCreative.FastBitmapLib.FastBitmap.FastBitmapLocker._fastBitmap">
            <summary>
            The fast bitmap instance attached to this locker
            </summary>
        </member>
        <member name="P:CCreative.FastBitmapLib.FastBitmap.FastBitmapLocker.FastBitmap">
            <summary>
            Gets the fast bitmap instance attached to this locker
            </summary>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.FastBitmapLocker.#ctor(CCreative.FastBitmapLib.FastBitmap)">
            <summary>
            Initializes a new instance of the FastBitmapLocker struct with an initial fast bitmap object.
            The fast bitmap object passed will be unlocked after calling Dispose() on this struct
            </summary>
            <param name="fastBitmap">A fast bitmap to attach to this locker which will be released after a call to Dispose</param>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmap.FastBitmapLocker.Dispose">
            <summary>
            Disposes of this FastBitmapLocker, essentially unlocking the underlying fast bitmap
            </summary>
        </member>
        <member name="T:CCreative.FastBitmapLib.FastBitmapExtensions">
            <summary>
            Static class that contains fast bitmap extension methdos for the Bitmap class
            </summary>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmapExtensions.FastLock(System.Drawing.Bitmap)">
            <summary>
            Locks this bitmap into memory and returns a FastBitmap that can be used to manipulate its pixels
            </summary>
            <param name="bitmap">The bitmap to lock</param>
            <returns>A locked FastBitmap</returns>
        </member>
        <member name="M:CCreative.FastBitmapLib.FastBitmapExtensions.DeepClone(System.Drawing.Bitmap)">
            <summary>
            Returns a deep clone of this Bitmap object, with all the data copied over.
            After a deep clone, the new bitmap is completely independent from the original
            </summary>
            <param name="bitmap">The bitmap to clone</param>
            <returns>A deep clone of this Bitmap object, with all the data copied over</returns>
        </member>
        <member name="M:CCreative.Function.preload">
            -------------------------------------------------------------------------------------------------
             <summary>   Called directly before setup(), the preload() function is used to handle asynchronous loading of external files. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Function.setup">
            -------------------------------------------------------------------------------------------------
             <summary>   The setup() function is called once when the program starts. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Function.predraw">
            -------------------------------------------------------------------------------------------------
             <summary>   Called before the draw function. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Function.draw">
            -------------------------------------------------------------------------------------------------
             <summary>   Called directly after setup(), the draw() function continuously executes the lines of code contained inside its block until the program is stopped or noLoop() is called. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Function.keyPressed">
            -------------------------------------------------------------------------------------------------
             <summary>   The keyPressed() function is called once every time a key is pressed. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="e">    Keyboard key event information. </param>
        </member>
        <member name="M:CCreative.Function.mouseDragged">
            -------------------------------------------------------------------------------------------------
             <summary>   The mouseDragged() function is called once every time the mouse moves. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="e">    Mouse move event information. </param>
        </member>
        <member name="M:CCreative.Function.mouseWheel">
            -------------------------------------------------------------------------------------------------
             <summary>   The function mouseWheel() is executed every time a vertical mouse wheel event is detected either triggered by an actual mouse wheel or by a touchpad. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="e">    Mouse wheel event information. </param>
        </member>
        <member name="M:CCreative.General.timerInterval(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the timer interval. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="interval">    The timer interval in milliseconds. </param>
             
        </member>
        <member name="M:CCreative.General.timerInterval">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the timer interval. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
        </member>
        <member name="M:CCreative.General.init(CCreative.Function)">
            -------------------------------------------------------------------------------------------------
             <summary>   Initializes the CCreative library. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="functions">    The functions class that holds the functions. </param>
        </member>
        <member name="P:CCreative.General.frameCount">
            -------------------------------------------------------------------------------------------------
             <summary>   The system variable frameCount contains the number of frames that have been displayed since the program started. </summary>
            
             <value> The frame count. </value>
        </member>
        <member name="M:CCreative.General.frameRate(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Specifies the number of frames to be displayed every second. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="rate"> The set Framerate. </param>
        </member>
        <member name="M:CCreative.General.frameRate">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current framerate. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The framerate. </returns>
        </member>
        <member name="M:CCreative.General.noCursor">
            -------------------------------------------------------------------------------------------------
             <summary>   Hides the cursor from view. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.General.Cursor">
            -------------------------------------------------------------------------------------------------
             <summary>   Shows the cursor from view. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.General.delay(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Delays the program to do furder actions during the given time. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="milliseconds"> The milliseconds. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:CCreative.General.print``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   The print() function writes to the console area. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="toPrint">  Value to print. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:CCreative.General.println``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   The print() function writes to the console area, with a newline. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="toPrint">  Value to print. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:CCreative.General.fullScreen">
            -------------------------------------------------------------------------------------------------
             <summary>   If argument is given, sets the sketch to fullscreen or not based on the value of the argument. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   true if the window is fullscreen, else the window isn't fullscreen. </returns>
        </member>
        <member name="M:CCreative.General.size(System.Int32,System.Int32,System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Defines the dimension of the display window width and height in units of pixels. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="width">    The width of the display window in units of pixels. </param>
             <param name="height">   The height of the display window in units of pixels. </param>
             <param name="highQuality">   Determents if the drawings are in high quality. </param>
        </member>
        <member name="M:CCreative.General.size(System.Int32,System.Int32,CCreative.General.RenderTypes)">
            -------------------------------------------------------------------------------------------------
             <summary>   Defines the dimension of the display window width and height in units of pixels. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="width">    The width of the display window in units of pixels. </param>
             <param name="height">   The height of the display window in units of pixels. </param>
             <param name="renderer">   The renderer to use. </param>
        </member>
        <member name="M:CCreative.General.resize(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Resizes the current window by the given dimentions </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="width">    The width of the display window in units of pixels. </param>
             <param name="height">   The height of the display window in units of pixels. </param>
        </member>
        <member name="M:CCreative.Colors.alpha(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the alpha value from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The alpha component. </returns>
        </member>
        <member name="M:CCreative.Colors.red(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the red value from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The red component. </returns>
        </member>
        <member name="M:CCreative.Colors.green(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the green value from a color or pixel array. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The green component. </returns>
        </member>
        <member name="M:CCreative.Colors.blue(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the blue value from a color or pixel array. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The blue component. </returns>
        </member>
        <member name="M:CCreative.Colors.hue(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the hue value from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The hue component. </returns>
        </member>
        <member name="M:CCreative.Colors.saturation(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the saturation value from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The saturation component. </returns>
        </member>
        <member name="M:CCreative.Colors.brightness(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Extracts the HSB brightness value from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The brightness component. </returns>
        </member>
        <member name="M:CCreative.Colors.randomColor(System.Byte,System.Byte,System.Byte)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random Color between a range. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="min">          The minimum value. </param>
             <param name="max">          The maximum value. </param>
             <param name="transparancy"> The transparancy of the color. </param>
            
             <returns>   The random color. </returns>
        </member>
        <member name="M:CCreative.Colors.randomColor(System.Byte,System.Byte)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random Color between a range. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="min">  The minimum value. </param>
             <param name="max">  The maximum value. </param>
            
             <returns>   The random color. </returns>
        </member>
        <member name="M:CCreative.Colors.randomColor">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random Color between a range. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The random color. </returns>
        </member>
        <member name="M:CCreative.Colors.randomColor(System.Byte)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random Color between a range. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="transparancy"> The transparancy of the color. </param>
            
             <returns>   The random color. </returns>
        </member>
        <member name="T:CCreative.Colors.colorModes">
            <summary>
            The possible Color modes
            </summary>
        </member>
        <member name="M:CCreative.Colors.colorMode(CCreative.Colors.colorModes)">
            -------------------------------------------------------------------------------------------------
             <summary>   colorMode() changes the way CCreative interprets color data. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="modes">    The modes. </param>
        </member>
        <member name="M:CCreative.Colors.colorMode">
            -------------------------------------------------------------------------------------------------
             <summary>   returns the mode CCreative interprets color date. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   the mode CCreative interprets color date. </returns>
        </member>
        <member name="M:CCreative.Colors.invertColor(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Inverts a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to invert. </param>
            
             <returns>   the inverted color. </returns>
        </member>
        <member name="M:CCreative.Colors.invertColor(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Inverts a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The grayscale or hue component to invert. </param>
            
             <returns>   the inverted color. </returns>
        </member>
        <member name="M:CCreative.Colors.lerpColor(System.Drawing.Color,System.Drawing.Color,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Blends two colors to find a third color somewhere between them. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color1">   Interpolate from this color. </param>
             <param name="color2">   Interpolate to this color. </param>
             <param name="atm">      number between 0 and 1. </param>
            
             <returns>   A Color. </returns>
        </member>
        <member name="M:CCreative.Colors.color(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Creates colors for storing in variables of the Color datatype </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The grayscale or hue component. </param>
            
             <returns>   A new Color. </returns>
        </member>
        <member name="M:CCreative.Colors.color(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Creates colors for storing in variables of the Color datatype. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">        The grayscale or hue component. </param>
             <param name="transparancy"> The transparancy of the color. </param>
            
             <returns>   A new Color. </returns>
        </member>
        <member name="M:CCreative.Colors.color(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Creates colors for storing in variables of the Color datatype. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value1">   Red or hue value relative to the current color range. </param>
             <param name="value2">   Green or saturation value relative to the current color range. </param>
             <param name="value3">   Blue or brightness value relative to the current color range. </param>
            
             <returns>   A new Color. </returns>
        </member>
        <member name="M:CCreative.Colors.color(System.Int32,System.Int32,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Creates colors for storing in variables of the Color datatype. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value1">       Red or hue value relative to the current color range. </param>
             <param name="value2">       Green or saturation value relative to the current color range. </param>
             <param name="value3">       Blue or brightness value relative to the current color range. </param>
             <param name="transparancy"> The transparancy of the color. </param>
            
             <returns>   A new Color. </returns>
        </member>
        <member name="M:CCreative.Data.Float``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a value to its floating point representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The parsed float. </returns>
        </member>
        <member name="M:CCreative.Data.Int``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a boolean, string, or float to its integer representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The parsed interger. </returns>
        </member>
        <member name="M:CCreative.Data.str``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a boolean, string or number to its string representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The parsed string. </returns>
        </member>
        <member name="M:CCreative.Data.Boolean``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a number or string to its boolean representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The parsed boolean. </returns>
        </member>
        <member name="M:CCreative.Data.Byte``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a number, string or boolean to its byte representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The parsed byte. </returns>
        </member>
        <member name="M:CCreative.Data.Char``1(``0)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a number or string to its corresponding single-character string representation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="arg">  The value to convert. </param>
            
             <returns>   The converted char. </returns>
        </member>
        <member name="M:CCreative.Data.Hex(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a number to a string in its equivalent hexadecimal notation. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">       value to parse. </param>
             <param name="maxNumbers">   (Optional) The maximum numbers. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:CCreative.Data.unHex(System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts a string representation of a hexadecimal number to its equivalent integer value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="hexValue"> The hexadecimal value. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:CCreative.Data.join(System.String[],System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   Combines an array of Strings into one String, each separated by the character(s) used for the separator parameter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="list">         Array of Strings to be joined. </param>
             <param name="separator">    String to be placed between each item. </param>
            
             <returns>   The combined string. </returns>
        </member>
        <member name="M:CCreative.Data.split(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   The split() function breaks a String into pieces using a character or string as the delimiter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The String to be split. </param>
             <param name="delim">    The String used to separate the data. </param>
            
             <returns>   The string array that holds the strings. </returns>
        </member>
        <member name="M:CCreative.Data.splitToken(System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>   The splitTokens() function splits a String at one or many character delimiters or "tokens". </summary>
            
            
             <param name="value">    The String to be split. </param>
             <param name="delim">    (Optional) List of individual Strings that will be used as separators. </param>
            
             <returns>   A string[]. </returns>
        </member>
        <member name="M:CCreative.Data.append``1(System.Array,``0)">
            -------------------------------------------------------------------------------------------------
             <summary>Appends an value to the given array. </summary>
            
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">    The array. </param>
             <param name="value">    The value. </param>
            
             <returns>the new array Array. </returns>
        </member>
        <member name="M:CCreative.Data.swap``1(``0[],System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Swaps 2 indexes of an arrray. </summary>
            
            
             <typeparam name="T">    The type of the array. </typeparam>
             <param name="array">    The array to swap the indexes from. </param>
             <param name="i">    The first index. </param>
             <param name="j">    The second index. </param>
        </member>
        <member name="T:CCreative.Drawing.drawModes">
            -------------------------------------------------------------------------------------------------
             <summary>   Values that represent the drawing modes. </summary>
            
        </member>
        <member name="T:CCreative.Drawing.angleModes">
            -------------------------------------------------------------------------------------------------
             <summary>   Values that represent the angle modes. </summary>
            
        </member>
        <member name="M:CCreative.Drawing.angleMode(CCreative.Drawing.angleModes)">
            -------------------------------------------------------------------------------------------------
             <summary>   Specifies which angle mode to use with the rotate function. </summary>
            
            
             <param name="modes">    The angle mode to set it to. </param>
             
        </member>
        <member name="M:CCreative.Drawing.angleMode">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current angle mode. </summary>
            
        </member>
        <member name="M:CCreative.Drawing.translate(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Specifies an amount to displace objects within the display window. </summary>
            
            
             <param name="x">    Left/right translation. </param>
             <param name="y">    Up/down translation. </param>
        </member>
        <member name="M:CCreative.Drawing.translate(System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Specifies an amount to displace objects within the display window. </summary>
            
            
             <param name="point">    The point to displace the objects with. </param>
        </member>
        <member name="M:CCreative.Drawing.fill(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the color used to fill shapes. </summary>
            
            
             <param name="DrawColor">    The fill color. </param>
            
             <returns>   The fill color. </returns>
        </member>
        <member name="M:CCreative.Drawing.background(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   The background() function sets the color used for the background and removes every drawing. </summary>
            
            
             <param name="backcolor">    The backcolor. </param>
            
             <returns>  The background color. </returns>
        </member>
        <member name="M:CCreative.Drawing.background(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   The background() function sets the color used for the background and removes every drawing. </summary>
            
            
             <param name="value">    The grayscale or hue value, depending on the colormode. </param>
            
             <returns>   The background color. </returns>
        </member>
        <member name="M:CCreative.Drawing.background">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the background color. </summary>
            
            
             <returns>   The background color. </returns>
        </member>
        <member name="M:CCreative.Drawing.fill(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the color used to fill shapes. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="value">    The grayscale or hue, depending on the colormode. </param>
            
             <returns>   The fill color. </returns>
        </member>
        <member name="M:CCreative.Drawing.fill(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the color used to fill shapes. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="value">        The grayscale or hue, depending on the colormode. </param>
             <param name="transparancy"> The transparancy. </param>
            
             <returns>   The given color. </returns>
        </member>
        <member name="M:CCreative.Drawing.noFill">
            -------------------------------------------------------------------------------------------------
             <summary>   Disables filling geometry. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.stroke(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the color used to draw lines and borders around shapes. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="DrawColor">    The stroke color. </param>
            
             <returns>   The stroke color. </returns>
        </member>
        <member name="M:CCreative.Drawing.stroke(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the color used to draw lines and borders around shapes. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="value">    The grayscale or hue, depending on the colormode. </param>
            
             <returns>   The stroke color. </returns>
        </member>
        <member name="M:CCreative.Drawing.strokeWeight(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the width of the stroke used for lines, points, and the border around shapes. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="weight">   The weight (in pixels) of the stroke. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.Drawing.noStroke">
            -------------------------------------------------------------------------------------------------
             <summary>   Disables drawing the stroke (outline). </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.smooth">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws all geometry with smooth (anti-aliased) edges. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.noSmooth">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws all geometry with jagged (aliased) edges. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.ellipseMode(CCreative.Drawing.drawModes)">
            -------------------------------------------------------------------------------------------------
             <summary>   Modifies the location from which ellipses are drawn by changing the way in which parameters given to ellipse() are interpreted. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="modes">    The modes. </param>
        </member>
        <member name="M:CCreative.Drawing.rectMode(CCreative.Drawing.drawModes)">
            -------------------------------------------------------------------------------------------------
             <summary>   Modifies the location from which rectangles are drawn by changing the way in which parameters given to rect() are interpreted. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="modes">    The modes. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="w">    The width. </param>
             <param name="h">    The height. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Drawing.PointF,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="w">        The width. </param>
             <param name="h">        The height. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="size"> The diameter. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Drawing.PointF,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="size">     The diameter. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Drawing.PointF,System.Drawing.SizeF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="size">     The width and height. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Double,System.Double,System.Drawing.SizeF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="size"> The width and height. </param>
        </member>
        <member name="M:CCreative.Drawing.ellipse(System.Drawing.Point,System.Drawing.Point)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws an ellipse (oval) to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="point1">   The first point. </param>
             <param name="point2">   The second point. </param>
        </member>
        <member name="M:CCreative.Drawing.line(System.Drawing.PointF,System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a line (a direct path between two points) to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="point1">   The first point. </param>
             <param name="point2">   The second point. </param>
        </member>
        <member name="M:CCreative.Drawing.line(System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a line (a direct path between two points) to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x1">   The first x value. </param>
             <param name="y1">   The first y value. </param>
             <param name="x2">   The second x value. </param>
             <param name="y2">   The second y value. </param>
        </member>
        <member name="M:CCreative.Drawing.point(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a point, a coordinate in space at the dimension of one pixel </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
            
             <returns>   The given point. </returns>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="w">    The width. </param>
             <param name="h">    The height. </param>
            
             <returns>   The rectangle. </returns>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Drawing.PointF,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="w">        The width. </param>
             <param name="h">        The height. </param>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Drawing.PointF,System.Drawing.SizeF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="size">     The width and height. </param>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Double,System.Double,System.Drawing.SizeF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="size"> The width and height. </param>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">        The x coordinate. </param>
             <param name="y">        The y coordinate. </param>
             <param name="diameter"> The diameter. </param>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Drawing.PointF,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="location"> The location. </param>
             <param name="diameter"> The diameter. </param>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Drawing.Point,System.Drawing.Point)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="point1">   The first point. </param>
             <param name="point2">   The second point. </param>
            
             <returns>   The rectangle. </returns>
        </member>
        <member name="M:CCreative.Drawing.rect(System.Drawing.RectangleF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a rectangle to the screen. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="rectangle">    The rectangle to draw. </param>
        </member>
        <member name="M:CCreative.Drawing.quad(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a quad </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="point1">   The first point. </param>
             <param name="point2">   The second point. </param>
             <param name="point3">   The third point. </param>
             <param name="point4">   The fourth point. </param>
        </member>
        <member name="M:CCreative.Drawing.quad(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws a quad. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x1">   The first x value. </param>
             <param name="y1">   The first y value. </param>
             <param name="x2">   The second x value. </param>
             <param name="y2">   The second y value. </param>
             <param name="x3">   The third x value. </param>
             <param name="y3">   The third y value. </param>
             <param name="x4">   The fourth x value. </param>
             <param name="y4">   The fourth y value. </param>
        </member>
        <member name="M:CCreative.Drawing.Text(System.String,System.Drawing.Point)">
            -------------------------------------------------------------------------------------------------
             <summary>   Draws text to the screen. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="text">     the alphanumeric symbols to be displayed. </param>
             <param name="point">    The location. </param>
        </member>
        <member name="M:CCreative.Drawing.drawFramerate">
            -------------------------------------------------------------------------------------------------
             <summary>   Show the FrameRate from the window into the statusbar. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.drawTotalTime">
            -------------------------------------------------------------------------------------------------
             <summary>   Shows the total time that the program is running into the status bar </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.drawAverageFramerate">
            -------------------------------------------------------------------------------------------------
             <summary>   Shows the average framerate into the status bar </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.textSize(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the fontsize for the Text() method. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="fontsize"> The fontsize. </param>
            
             <returns>   The fontsize. </returns>
        </member>
        <member name="M:CCreative.Drawing.rotate(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Rotates a shape the amount specified by the angle parameter. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="angle">    The angle of rotation, specified in radians or degrees, depending on current angleMode. </param>
            
             <returns>   The angle. </returns>
        </member>
        <member name="M:CCreative.Drawing.CenterText(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   Centers the text around the point </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="Center">   If the text needs to be centerd around the point. </param>
            
             <returns>   if the text is being centerd around the point. </returns>
        </member>
        <member name="M:CCreative.Drawing.CenterText">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns if text text is being centerd around the point. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <returns>   if the text is being centerd around the point. </returns>
        </member>
        <member name="M:CCreative.Drawing.beginShape">
            -------------------------------------------------------------------------------------------------
             <summary>   Using the beginShape() and endShape() functions allow creating more complex forms. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
        </member>
        <member name="M:CCreative.Drawing.vertex(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   All shapes are constructed by connecting a series of vertices. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x">    x-coordinate of the vertex. </param>
             <param name="y">    y-coordinate of the vertex. </param>
        </member>
        <member name="M:CCreative.Drawing.vertex(System.Drawing.PointF[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets vertecies for the shape with the given points. </summary>
            
             <remarks>   Jan Tamis, 30-8-2017. </remarks>
            
             <param name="vertecies">    The vertecies. </param>
        </member>
        <member name="M:CCreative.Drawing.vertex(System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets a vertex for the shape with the given point. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="point">    The point. </param>
        </member>
        <member name="M:CCreative.Drawing.endShape">
            -------------------------------------------------------------------------------------------------
             <summary>   The endShape() function is the companion to beginShape() and may only be called after beginShape(). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.endShape(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary>   The endShape() function is the companion to beginShape() and may only be called after beginShape(). </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="Connect">  Connect the ending and beginning of the shape. </param>
        </member>
        <member name="M:CCreative.Drawing.loadPixels">
            -------------------------------------------------------------------------------------------------
             <summary>   Loads the pixel data for the display window into the pixels[] array. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Drawing.set(System.Int32,System.Int32,System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   Changes the color of any pixel, or writes an image directly to the display window. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
            
             <param name="x">        x-coordinate of the pixel. </param>
             <param name="y">        y-coordinate of the pixel. </param>
             <param name="color">    The color to fill the pixel. </param>
        </member>
        <member name="M:CCreative.Drawing.updatePixels">
            -------------------------------------------------------------------------------------------------
             <summary>   Updates the display window with the data in the pixels[] array. </summary>
            
             <remarks>   Jan Tamis, 27-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Math.abs(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the absolute value (magnitude) of a number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Number to compute. </param>
            
             <returns>   The absolute value. </returns>
        </member>
        <member name="M:CCreative.Math.ceil(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the closest int value that is greater than or equal to the value of the parameter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Number to round up. </param>
            
             <returns>   The ceiling. </returns>
        </member>
        <member name="M:CCreative.Math.constrain(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Constrains a value between a minimum and maximum value </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Number to constrain. </param>
             <param name="low">      Minimum limit. </param>
             <param name="high">     Maximum limit. </param>
            
             <returns>   The constrain value. </returns>
        </member>
        <member name="M:CCreative.Math.dist(System.Drawing.PointF,System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the distance between two points </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="beginPoint">   The begin point. </param>
             <param name="endPoint">     The end point. </param>
            
             <returns>   The distance. </returns>
        </member>
        <member name="M:CCreative.Math.dist(System.Drawing.PointF[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the distance between two points </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="beginPoint">   The begin point. </param>
             <param name="endPoint">     The end point. </param>
            
             <returns>   The distance. </returns>
        </member>
        <member name="M:CCreative.Math.dist(System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the distance between two points. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="beginX">   x-coordinate of the first point. </param>
             <param name="beginY">   y-coordinate of the first point. </param>
             <param name="endX">     x-coordinate of the second point. </param>
             <param name="endY">     y-coordinate of the second point. </param>
            
             <returns>   The distance. </returns>
        </member>
        <member name="M:CCreative.Math.exp(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns Euler's number e (2.71828...) raised to the power of the number parameter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Exponent to raise. </param>
            
             <returns>   The exponent value. </returns>
        </member>
        <member name="M:CCreative.Math.floor(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the closest int value that is less than or equal to the value of the parameter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Number to round down. </param>
            
             <returns>   The rounded number. </returns>
        </member>
        <member name="M:CCreative.Math.lerp(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates a number between two numbers at a specific increment. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="start">    first value. </param>
             <param name="stop">     second value. </param>
             <param name="atm">      number between 0.0 and 1.0. </param>
            
             <returns>   The value. </returns>
        </member>
        <member name="M:CCreative.Math.log(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the natural logarithm (the base-e logarithm) of a number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   number greater than 0. </param>
            
             <returns>   The value. </returns>
        </member>
        <member name="M:CCreative.Math.mag(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the magnitude (or length) of a vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="numberX">  The x coordinate. </param>
             <param name="numberY">  The y coordinate. </param>
            
             <returns>   The lenght. </returns>
        </member>
        <member name="M:CCreative.Math.map(System.Double,System.Double,System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Re-maps a number from one range to another.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">        The incoming value to be converted. </param>
             <param name="least">        Lower bound of the value's current range. </param>
             <param name="max">          Upper bound of the value's current range. </param>
             <param name="toMinimum">    Lower bound of the value's target range. </param>
             <param name="toMaximum">    Upper bound of the value's target range. </param>
            
             <returns>   The re-maped value. </returns>
        </member>
        <member name="M:CCreative.Math.max(System.Double[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Determines the largest value in a sequence of numbers, and then returns that value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="numbers">  The array to check. </param>
            
             <returns>   The maximum value. </returns>
        </member>
        <member name="M:CCreative.Math.min(System.Double[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Determines the smallest value in a sequence of numbers, and then returns that value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="numbers">  The array to check. </param>
            
             <returns>   The minimum value. </returns>
        </member>
        <member name="M:CCreative.Math.norm(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Normalizes a number from another range into a value between 0 and 1.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    Incoming value to be normalized. </param>
             <param name="start">    Lower bound of the value's current range. </param>
             <param name="stop">     Upper bound of the value's current range. </param>
            
             <returns>   The normalized value. </returns>
        </member>
        <member name="M:CCreative.Math.pow(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Facilitates exponential expressions. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Base of the exponential expression. </param>
             <param name="power">    Power by which to raise the base. </param>
            
             <returns>   The value. </returns>
        </member>
        <member name="M:CCreative.Math.round(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Rounds the number parameter </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   The number to round. </param>
            
             <returns>   The rounded value. </returns>
        </member>
        <member name="M:CCreative.Math.sq(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Squares a number (multiplies a number by itself). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Number to square. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.sqrt(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the square root of a number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   Non-negative number to square root. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.noise(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the Perlin noise value at specified coordinates. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    x-coordinate in noise space. </param>
            
             <returns>   The noise value. </returns>
        </member>
        <member name="M:CCreative.Math.noise(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the Perlin noise value at specified coordinates. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    x-coordinate in noise space. </param>
             <param name="y">    y-coordinate in noise space. </param>
            
             <returns>   The noise value. </returns>
        </member>
        <member name="M:CCreative.Math.noise(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the Perlin noise value at specified coordinates. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    x-coordinate in noise space. </param>
             <param name="y">    y-coordinate in noise space. </param>
             <param name="z">    z-coordinate in noise space. </param>
            
             <returns>   The noise value. </returns>
        </member>
        <member name="M:CCreative.Math.noiseSeed(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the seed value for noise(). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="Seed"> The seed value. </param>
        </member>
        <member name="M:CCreative.Math.noiseDetail(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Adjusts the character and level of detail produced by the Perlin noise function. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="Detail">   Number of octaves to be used by the noise. </param>
        </member>
        <member name="M:CCreative.Math.acos(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   The inverse of cos(), returns the arc cosine of a value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The value whose arc cosine is to be returned. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.asin(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   The inverse of sin(), returns the arc sine of a value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The value whose arc sine is to be returned. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.atan(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   The inverse of tan(), returns the arc tangent of a value. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The value whose arc tangent is to be returned. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.atan2(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the angle (in radians) from a specified point to the coordinate origin as measured from the positive x-axis. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="y">    y-coordinate of the point. </param>
             <param name="x">    x-coordinate of the point. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.cos(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the cosine of an angle. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The angle. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.sin(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the sine of an angle. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The angle. </param>
            
             <returns>   A value between -1 and 1. </returns>
        </member>
        <member name="M:CCreative.Math.tan(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the tangent of an angle. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="value">    The angle. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.degrees(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts degrees to radiands. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="radians">  The radians to convert. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.radians(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts radiands to degrees. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="degrees">  The radiands. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.PolarToCartesian(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts the angle and radius to a x-y point. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="StartPosition">    The start position. </param>
             <param name="angle">            The angle. </param>
             <param name="radius">           The radius. </param>
            
             <returns>   The location. </returns>
        </member>
        <member name="T:CCreative.Math.Result">
            -------------------------------------------------------------------------------------------------
             <summary>   A result. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
        </member>
        <member name="M:CCreative.Math.CartesianToPolar(System.Drawing.Point,System.Drawing.Point)">
            -------------------------------------------------------------------------------------------------
             <summary>   converts the locations to a radius and angle. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="Start">    The start. </param>
             <param name="location"> The location. </param>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.contrastColor(System.Drawing.Color)">
            -------------------------------------------------------------------------------------------------
             <summary>   returns the contrast color from a color. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="color">    The color to check. </param>
            
             <returns>   The contrast color (White or Black). </returns>
        </member>
        <member name="M:CCreative.Math.getDominantColor(System.Drawing.Bitmap)">
            -------------------------------------------------------------------------------------------------
             <summary>   Gets dominant color of a bitmap. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="bmp">  The bitmap to check. </param>
            
             <returns>   The dominant color. </returns>
        </member>
        <member name="M:CCreative.Math.randomPoint">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random Point </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A random point. </returns>
        </member>
        <member name="M:CCreative.Math.randomString(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random string with a given lenght. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="length">   The length. </param>
            
             <returns>   A random string. </returns>
        </member>
        <member name="M:CCreative.Math.randomVector">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random normalized vector </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A random vector. </returns>
        </member>
        <member name="M:CCreative.Math.millis">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current milliseconds. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The milliseconds. </returns>
        </member>
        <member name="M:CCreative.Math.second">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current seconds. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   the current seconds. </returns>
        </member>
        <member name="M:CCreative.Math.minute">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current minute. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The current minute. </returns>
        </member>
        <member name="M:CCreative.Math.hour">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current hour. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The current hour. </returns>
        </member>
        <member name="M:CCreative.Math.day">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current day. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The current day. </returns>
        </member>
        <member name="M:CCreative.Math.month">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current month. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The current month. </returns>
        </member>
        <member name="M:CCreative.Math.year">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the current year. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The current year. </returns>
        </member>
        <member name="M:CCreative.Math.random(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Return a random floating-point number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="min">  The lower bound (inclusive). </param>
             <param name="max">  the upper bound (exclusive). </param>
            
             <returns>   System.Single. </returns>
        </member>
        <member name="M:CCreative.Math.random(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Return a random floating-point number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="max">  the upper bound (exclusive). </param>
            
             <returns>   System.Single. </returns>
        </member>
        <member name="M:CCreative.Math.random">
            -------------------------------------------------------------------------------------------------
             <summary>   Return a random floating-point number between 0 and 1. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A random floating-point number between 0 and 1. </returns>
        </member>
        <member name="M:CCreative.Math.nextGaussian(System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random number fitting a Gaussian, or normal, distribution. There is theoretically no minimum or maximum value that randomGaussian() might return.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="mean">       The mean. </param>
             <param name="sd">    The standard deviation. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.Math.nextGaussian">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a random number fitting a Gaussian, or normal, distribution. There is theoretically no minimum or maximum value that randomGaussian() might return.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A Gaussian of mean 0 and deviation of 1. </returns>
        </member>
        <member name="M:CCreative.Math.nextBoolean">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a true or false the chance is 50-50. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The result. </returns>
        </member>
        <member name="M:CCreative.Math.nextTriangular(System.Double,System.Double,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Generates values from a triangular distribution. </summary>
            
             <remarks>
                 See http://en.wikipedia.org/wiki/Triangular_distribution for a description of the
                 triangular probability distribution and the algorithm for generating one.
             </remarks>
            
             <param name="min">    Minimum. </param>
             <param name="max">    Maximum. </param>
             <param name="mode">    Mode (most frequent value) </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.Math.sign(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   returns the sign of a number, indicating whether the number is positive, negative or zero </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">   The number to check. </param>
            
             <returns>   -1 if lower than 0, 0 if equal to 0 and 1 if higher that 0. </returns>
        </member>
        <member name="M:CCreative.Math.fibonacci(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns the fibonacci of the givn number. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="number">    The number. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="P:CCreative.PVector.x">
            -------------------------------------------------------------------------------------------------
             <summary>   The x component of the vector. </summary>
            
             <value> The x coordinate. </value>
        </member>
        <member name="P:CCreative.PVector.y">
            -------------------------------------------------------------------------------------------------
             <summary>   The y component of the vector. </summary>
            
             <value> The y coordinate. </value>
        </member>
        <member name="P:CCreative.PVector.z">
            -------------------------------------------------------------------------------------------------
             <summary>   The z component of the vector. </summary>
            
             <value> The z coordinate. </value>
        </member>
        <member name="M:CCreative.PVector.set(System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the x, y, and z component of the vector using three separate variables. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.set(System.Single,System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the x, y, and z component of the vector using three separate variables.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="z">    The z coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.set(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the x, y, and z component of the vector using three separate variables.  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The vector to set. </param>
            
             <returns>   this PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.set(System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Sets the x, y, and z component of the vector using three separate variables.
             </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The point to set. </param>
            
             <returns>   this PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.random2D">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a 2D unit vector with a random direction. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.random3D">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a 3D unit vector with a random direction. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.normalize">
            -------------------------------------------------------------------------------------------------
             <summary>   Normalize the vector to length 1 (make it a unit vector). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.fromAngle(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates and returns a new 2D unit vector from the specified angle value (in radians). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="angle">    the angle in radians. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.fromAngle(System.Single,CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates and returns a new 2D unit vector from the specified angle value (in radians).  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="angle">    the angle in radians. </param>
             <param name="vector">   the target vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds x and y components to a vector, adds one vector to another. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(System.Single,System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds x, y, and z components to a vector, adds one vector to another. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="z">    The z coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds a vector to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The vector to add. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(CCreative.PVector,CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds two vectors to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector1">  The first vector. </param>
             <param name="vector2">  The second vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(CCreative.PVector[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds a array of vectors to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vectors">  The vectors to add. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.add(System.Collections.Generic.List{CCreative.PVector})">
            -------------------------------------------------------------------------------------------------
             <summary>   Adds a list of vectors to the current vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vectors">  The vectors to add. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts x and y components from a vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(System.Single,System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts x, y and z components from a vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="z">    The z coordinate. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts a vector to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The vector to set. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(CCreative.PVector,CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts two vectors to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector1">  The first vector. </param>
             <param name="vector2">  The second vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(CCreative.PVector[])">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts a array of vector to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vectors">  The vectors to add. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.sub(System.Collections.Generic.List{CCreative.PVector})">
            -------------------------------------------------------------------------------------------------
             <summary>   Subtracts a list of vectors to this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vectors">  The vectors to add. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.mult(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Multiplies this vector by a scalar. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="multi">    The number to multiply with the vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.div(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Divides a vector by a scalar. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="multi">    The number to divide with the vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.heading">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the angle of rotation for a vector (2D vectors only). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   The angle (in degrees). </returns>
        </member>
        <member name="M:CCreative.PVector.dist(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the Euclidean distance. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The vector to calculate the distance with. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.dist(System.Drawing.PointF)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the Euclidean distance. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The point to calculate the distance with. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.mag">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the magnitude (length) of the vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.setMag(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Set the magnitude of this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="len">  The set magnitude. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.setMag(CCreative.PVector,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Set the magnitude of the given vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="target">   Target for the. </param>
             <param name="len">      The set magnitude. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.limit(System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Limit the magnitude of this vector to the value used for the limit parameter. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="Limit">    The limit. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.lerp(CCreative.PVector,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates linear interpolation from one vector to another vector. (Just like regular lerp(), but for vectors). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="toVector"> The vector to chance. </param>
             <param name="atm">      The amount of interpolation; some value between 0.0 (old vector) and 1.0 (new vector). </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.lerp(System.Single,System.Single,System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>    Calculates linear interpolation for this vector (Just like regular lerp(), but for vectors). </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="z">    The z coordinate. </param>
             <param name="atm">  The amount of interpolation; some value between 0.0 (old vector) and 1.0 (new vector). </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.lerp(CCreative.PVector,CCreative.PVector,System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates linear interpolation from one vector to another vector. (Just like regular lerp(), but for vectors).  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="fromVector">   From vector. </param>
             <param name="toVector">     To vector. </param>
             <param name="atm">          The amount of interpolation; some value between 0.0 (old vector) and 1.0 (new vector). </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.dot(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the dot product of this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   The vector to calculate the dot product with. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.dot(System.Single,System.Single,System.Single)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the dot product of this vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="x">    The x coordinate. </param>
             <param name="y">    The y coordinate. </param>
             <param name="z">    The z coordinate. </param>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.copy">
            -------------------------------------------------------------------------------------------------
             <summary>   Copies the components of the vector and returns the result as a PVector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.magsq">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates the magnitude (length) of the vector, squared. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A float. </returns>
        </member>
        <member name="M:CCreative.PVector.rotate(System.Double)">
            -------------------------------------------------------------------------------------------------
             <summary>   Rotates a vector by the specified angle (2D vectors only), while maintaining the same magnitude. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="theta">    the angle of rotation. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.array">
            -------------------------------------------------------------------------------------------------
             <summary>   Returns a array of the x-y-z components. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   A array of the x-y-z component of this vector. </returns>
        </member>
        <member name="M:CCreative.PVector.cross(CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the components to the cross product of this vector and the given vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector">   the vector to calculate the cross product with. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.cross(CCreative.PVector,CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Sets the components to the cross product of this vector and the given two vectors  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector1">  The first vector. </param>
             <param name="vector2">  The second vector. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.cross(CCreative.PVector,CCreative.PVector,CCreative.PVector)">
            -------------------------------------------------------------------------------------------------
             <summary>   Calculates and returns a vector composed of the cross product between two vectors  </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <param name="vector1">      The first vector. </param>
             <param name="vector2">      The second vector. </param>
             <param name="safeVector">   PVector to store the result. </param>
            
             <returns>   A PVector. </returns>
        </member>
        <member name="M:CCreative.PVector.toPoint">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts this vector to a point. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   This vector as a System.Drawing.Point. </returns>
        </member>
        <member name="M:CCreative.PVector.toPointF">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts this vector to a pointF. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   This vector as a PointF. </returns>
        </member>
        <member name="M:CCreative.PVector.toVector">
            -------------------------------------------------------------------------------------------------
             <summary>   Converts this vector to a WindowsBase vector. </summary>
            
             <remarks>   Jan Tamis, 29-8-2017. </remarks>
            
             <returns>   This object as a Vector. </returns>
        </member>
        <member name="T:CCreative.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CCreative.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CCreative.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CCreative.Properties.Resources.icon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:CCreative.Properties.Resources.icon1">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
    </members>
</doc>
